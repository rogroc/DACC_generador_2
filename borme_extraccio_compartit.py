# -*- coding: utf-8 -*-
"""BORME_extraccio_compartit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DQb2fIOI9LbdbmWRRyRgxCvK2IpYZL3Q

Aquest codi automatitza les tasques següents: 

1. Obté el llsitat d'entitats actualitzat del RSP de Dades Obertes i el guarda a la variable 'entitats'
2. Obté el pdf del llistat del dia actual del BORME i el guarda al disc
3. Obre el pdf del llistat d'entitats publicats el dia actual al BORME i n'extreu el text a la variable 'text2'
4. Cerca cada una de les entitats de la variable 'entitats' dins la variable 'text2'
5. Extreu de cada entitat coincident el número de BORME i el número d'inscripció i ho guarda a la variable 'resultat2'
6. Obre el pdf de cada coincidència i n'extreu la descripció
7. Guarda el resultat a un excel titulat amb el número de BORME del dia actual
"""

# 1. Obté el llsitat d'entitats actualitzat del RSP de Dades Obertes i el guarda a la variable 'entitats'

import requests
import json

url = 'https://analisi.transparenciacatalunya.cat/resource/gr39-ik6u.json?$query=SELECT%0A%20%20%60denominaci%60%2C%0A%20%20%60n_mero_de_registre%60%2C%0A%20%20%60marca_o_acr_nim%60%2C%0A%20%20%60naturalesa_jur_dica_agrupaci%60%2C%0A%20%20%60naturalesa_jur_dica%60%2C%0A%20%20%60nif%60%2C%0A%20%20%60departament_d_adscripci%60%2C%0A%20%20%60r_gim_jur_dic_singularitzat%60%2C%0A%20%20%60grau_de_participaci%60%2C%0A%20%20%60via_de_participaci%60%2C%0A%20%20%60total_participaci_generalitat%60%2C%0A%20%20%60mesura_de_participaci%60%2C%0A%20%20%60qualificador_de_la_participaci%60%2C%0A%20%20%60entitat_independent%60%2C%0A%20%20%60funcions_objecte%60%2C%0A%20%20%60refer_ncia_legal_de_les_funcions%60%2C%0A%20%20%60registre_de_fundacions%60%2C%0A%20%20%60data_de_registre_de_fundacions%60%2C%0A%20%20%60n_mero_del_registre_de_fundacions%60%2C%0A%20%20%60administraci_d_adscripci_nom_s_per_consorcis_i_fundacions%60%2C%0A%20%20%60situaci_registral%60%2C%0A%20%20%60estat_registral%60%2C%0A%20%20%60data_de_l_estat_registral%60%2C%0A%20%20%60data_d_efectes_jur_dics_de_l_alta%60%2C%0A%20%20%60sectoritzaci%60%2C%0A%20%20%60administraci_de_la_que_dep_n%60%2C%0A%20%20%60tipus_de_via%60%2C%0A%20%20%60nom_de_la_via%60%2C%0A%20%20%60n_mero_de_la_via_i_pis%60%2C%0A%20%20%60situaci%60%2C%0A%20%20%60localitat%60%2C%0A%20%20%60codi_postal%60%2C%0A%20%20%60prov_ncia%60%2C%0A%20%20%60tel_fon%60%2C%0A%20%20%60web%60%2C%0A%20%20%60correu_electr_nic%60%2C%0A%20%20%60total_participaci_generalitat_2%60%2C%0A%20%20%60total_participaci_p_blica%60%2C%0A%20%20%60mesura_de_la_participaci%60%2C%0A%20%20%60observacions%60%2C%0A%20%20%60rgan_de_govern%60%2C%0A%20%20%60nombre_m_nim_de_membres%60%2C%0A%20%20%60nombre_m_xim_de_membres%60%2C%0A%20%20%60recompte_membres_generalitat%60%2C%0A%20%20%60recompte_membres_p_blics%60%2C%0A%20%20%60total_membres_llistats%60%2C%0A%20%20%60total_membres_rgan%60%2C%0A%20%20%60total_drets_de_vot_generalitat%60%2C%0A%20%20%60total_drets_de_vot_sector_p_blic%60'

response = requests.get(url)
if response.status_code == 200:
    data = json.loads(response.content)
    # Aquí pots accedir als camps JSON extrets
else:
    print('Error en la petició')
    
entitats = []
for d in data:
    entitats.append(d['denominaci'])

#entitats.append('VOLCANICA MEDIA SL')

# 2. Obté el pdf del llistat del dia actual del BORME i el guarda al disc

# !pip install beautifulsoup4

from bs4 import BeautifulSoup
import requests
import datetime

x = datetime.datetime.now()
x = str(x).split(" ")[0].split("-")

x = ['2023', '04', '04']

url = "https://www.boe.es/borme/dias/"+x[0]+"/"+x[1]+"/"+x[2]+"/"

# Obteniu el contingut HTML de la pàgina web
response = requests.get(url)
html = response.content

# Parseu el contingut HTML amb Beautiful Soup
soup = BeautifulSoup(html, 'html.parser')

# Cerqueu el text "ÍNDICE ALFABÉTICO DE SOCIEDADES" dins dels elements p
p_elements = soup.find_all('p')

pdf_href = ''
for p in p_elements:
    if p.text == "ÍNDICE ALFABÉTICO DE SOCIEDADES":
        # Obteniu l'element "a" dins del "li" pare del "p"
        a_element = p.find_parent('li').find('a')
        # Obteniu el valor de l'atribut "href"
        pdf_href = "https://boe.es"+a_element['href']
        #print(pdf_href)
if pdf_href:
    print(pdf_href)
else:
    print('No hi ha butlletí')

import requests

response = requests.get(pdf_href)

pdf = pdf_href.split("/")[-1:][0]

with open(pdf, "wb") as f:
    f.write(response.content)

from google.colab import files

#files.download(pdf)

# 3. Obre el pdf del llistat d'entitats publicats el dia actual al BORME i n'extreu el text a la variable 'text2'

!pip install PyPDF2

# importing required modules
from PyPDF2 import PdfReader

# creating a pdf reader object
reader = PdfReader(pdf)

# printing number of pages in pdf file
num = len(reader.pages)

text2 = []

for n in range(num):

    # getting a specific page from the pdf file
    page = reader.pages[n]

    # extracting text from page
    text = page.extract_text()
    text2.append(text)
#text2

# 4. Cerca cada una de les entitats de la variable 'entitats' dins la variable 'text2'

!pip install unidecode

import re
from unidecode import unidecode

text2 = unidecode(str(text2).lower()).replace(" ", "").replace("'", "").replace(".", "").replace(",", "")

resultat2 = []

for e in entitats:

    entrada = unidecode(e.lower()).replace(" ", "").replace("'", "").replace(".", "").replace(",", "")
    
    match = re.search(rf"{entrada}\\n\\n(.*?(?<=\().*?(?=\)))", text2)

    match = re.search(rf"{entrada}(.*?(?<=\().*?(?=\)))", text2)
    
    # 5. Extreu de cada entitat coincident el número de BORME i el número d'inscripció i ho guarda a la variable 'resultat2'
    # Extracció del resultat
    if match:
        resultat = match.group(1)
        resultat = resultat.split('\\n(')
        resultat2.append([e, resultat[0].replace('\\n', ''), resultat[1].replace('\\n', '')])
#resultat2

import sys

if resultat2:
    #print(resultat2)
    print('Hi ha resultats')
else:
    sys.exit('El BORME analitzat no conté cap entitat del RSP')

resultat3 = []

for r in resultat2:
    url2 = url+"pdfs/"+r[1].upper()+".pdf"
    #print(url2)
    
    response = requests.get(url2)
    
    pdf2 = url2.split("/")[-1:][0]
    #print(pdf2)
    with open(pdf2, "wb") as f:
        f.write(response.content)

    #files.download(pdf2)

    # creating a pdf reader object
    reader = PdfReader(pdf2)

    # printing number of pages in pdf file
    num = len(reader.pages)

    text_pdf = []

    for n in range(num):

        # getting a specific page from the pdf file
        page = reader.pages[n]

        # extracting text from page
        text = page.extract_text()
        text_pdf.append(text)
    #text_pdf
        
    entrada = r[2]
    
    #print(entrada)
    match = re.search(rf"{entrada}(.*?)Datos registrales", str(text_pdf))
    
    # Extracció del resultat
    if match:
        resultat = match.group(1)
        resultat = resultat.split('\\n(')
        resultat3.append([r[0], r[1], r[2], resultat[0].replace("\\n", ""), url+"pdfs/"+r[1].upper()+".pdf"])
        
resultat3

import pandas as pd

pd.DataFrame(resultat3).to_excel(resultat2[0][1].upper()+".xlsx", index=False)

files.download(resultat2[0][1].upper()+".xlsx")

